{
  "language": "Solidity",
  "sources": {
    "src/dummy/DummyDiamondImplementation.sol": {
      "content": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n\n\ncontract DummyDiamondImplementation {\n\n\n    struct Tuple21927 {\n        uint8 busiType;\n        uint256 oraclePrice;\n        uint256 pay;\n        uint256 slippage;\n        uint16 market;\n        bool isLong;\n        bool isOpen;\n        bool isCreate;\n        bool isFromMarket;\n        uint256 sizeDelta;\n        uint256 price;\n        uint256 collateralDelta;\n        uint256 collateral;\n        uint256 tp;\n        uint256 sl;\n        uint64 orderId;\n        address account;\n        bool isExec;\n        uint8 liqState;\n        uint64 fromOrder;\n        bytes32 refCode;\n        uint8 execNum;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        bool triggerAbove;\n        uint128 gas;\n    }\n\n    struct Tuple464693 {\n        uint256 size;\n        uint256 collateral;\n        int256 entryFundingRate;\n        int256 realisedPnl;\n        uint256 averagePrice;\n        bool isLong;\n        uint32 lastTime;\n        uint16 market;\n        uint72 extra0;\n    }\n\n    struct Tuple2426236 {\n        uint8 busiType;\n        uint256 oraclePrice;\n        uint256 pay;\n        uint256 slippage;\n        uint16 market;\n        bool isLong;\n        bool isOpen;\n        bool isCreate;\n        bool isFromMarket;\n        uint256 sizeDelta;\n        uint256 price;\n        uint256 collateralDelta;\n        uint256 collateral;\n        uint256 tp;\n        uint256 sl;\n        uint64 orderId;\n        address account;\n        bool isExec;\n        uint8 liqState;\n        uint64 fromOrder;\n        bytes32 refCode;\n        uint8 execNum;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        bool triggerAbove;\n        uint128 gas;\n    }\n\n    struct Tuple2589231 {\n        uint16 market;\n        bool isLong;\n        bool isIncrease;\n        uint256 start;\n        uint256 end;\n        bool isOpen;\n        uint256 oraclePrice;\n        bytes32 storageKey;\n    }\n\n    struct Tuple9273272 {\n        bool isSuspended;\n        bool allowOpen;\n        bool allowClose;\n        bool validDecrease;\n        uint16 minSlippage;\n        uint16 maxSlippage;\n        uint16 minLeverage;\n        uint16 maxLeverage;\n        uint16 minPayment;\n        uint16 minCollateral;\n        uint16 decreaseNumLimit;\n        uint32 maxTradeAmount;\n    }\n\n    struct Tuple803863 {\n        uint32 maxDeviationBP;\n        uint32 priceDuration;\n        uint32 maxPriceUpdateDelay;\n        uint32 priceDataInterval;\n        uint32 sampleSpace;\n    }\n\n    struct Tuple8179501 {\n        uint8 busiType;\n        uint256 oraclePrice;\n        uint256 pay;\n        uint256 slippage;\n        uint16 market;\n        bool isLong;\n        bool isOpen;\n        bool isCreate;\n        bool isFromMarket;\n        uint256 sizeDelta;\n        uint256 price;\n        uint256 collateralDelta;\n        uint256 collateral;\n        uint256 tp;\n        uint256 sl;\n        uint64 orderId;\n        address account;\n        bool isExec;\n        uint8 liqState;\n        uint64 fromOrder;\n        bytes32 refCode;\n        uint8 execNum;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        bool triggerAbove;\n        uint128 gas;\n    }\n\n    struct Tuple910965 {\n        uint8 busiType;\n        uint256 oraclePrice;\n        uint256 pay;\n        uint256 slippage;\n        uint16 market;\n        bool isLong;\n        bool isOpen;\n        bool isCreate;\n        bool isFromMarket;\n        uint256 sizeDelta;\n        uint256 price;\n        uint256 collateralDelta;\n        uint256 collateral;\n        uint256 tp;\n        uint256 sl;\n        uint64 orderId;\n        address account;\n        bool isExec;\n        uint8 liqState;\n        uint64 fromOrder;\n        bytes32 refCode;\n        uint8 execNum;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        bool triggerAbove;\n        uint128 gas;\n    }\n\n    struct Tuple680644 {\n        bytes32 refCode;\n        uint128 collateral;\n        uint128 size;\n        uint256 price;\n        uint256 tp;\n        bool triggerAbove;\n        bool isFromMarket;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        uint64 orderID;\n        uint64 pairId;\n        uint64 fromId;\n        uint32 updatedAtBlock;\n        uint8 extra0;\n        address account;\n        uint96 extra1;\n        uint256 sl;\n        bool isIncrease;\n        bool isLong;\n        uint16 market;\n        uint96 extra2;\n        uint128 gas;\n        uint8 version;\n    }\n\n    struct Tuple5849784 {\n        uint8 busiType;\n        uint256 oraclePrice;\n        uint256 pay;\n        uint256 slippage;\n        uint16 market;\n        bool isLong;\n        bool isOpen;\n        bool isCreate;\n        bool isFromMarket;\n        uint256 sizeDelta;\n        uint256 price;\n        uint256 collateralDelta;\n        uint256 collateral;\n        uint256 tp;\n        uint256 sl;\n        uint64 orderId;\n        address account;\n        bool isExec;\n        uint8 liqState;\n        uint64 fromOrder;\n        bytes32 refCode;\n        uint8 execNum;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        bool triggerAbove;\n        uint128 gas;\n    }\n\n    struct Tuple8634448 {\n        uint16 market;\n        address account;\n        int256 collateralDelta;\n        uint256 sizeDelta;\n        int256 fundingRate;\n        bool isLong;\n    }\n\n    struct Tuple8047955 {\n        uint16 market;\n        address account;\n        int256 collateralDelta;\n        uint256 sizeDelta;\n        uint256 markPrice;\n        int256 fundingRate;\n        bool isLong;\n    }\n\n    struct Tuple4013238 {\n        Tuple0521689 inputs;\n        Tuple464693 position;\n        int256[] fees;\n        address collateralToken;\n        address indexToken;\n        int256 collateralDeltaAfter;\n    }\n\n    struct Tuple0521689 {\n        uint8 busiType;\n        uint256 oraclePrice;\n        uint256 pay;\n        uint256 slippage;\n        uint16 market;\n        bool isLong;\n        bool isOpen;\n        bool isCreate;\n        bool isFromMarket;\n        uint256 sizeDelta;\n        uint256 price;\n        uint256 collateralDelta;\n        uint256 collateral;\n        uint256 tp;\n        uint256 sl;\n        uint64 orderId;\n        address account;\n        bool isExec;\n        uint8 liqState;\n        uint64 fromOrder;\n        bytes32 refCode;\n        uint8 execNum;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        bool triggerAbove;\n        uint128 gas;\n    }\n\n    struct Tuple6871229 {\n        address facetAddress;\n        uint8 action;\n        bytes4[] functionSelectors;\n    }\n\n    struct Tuple564566 {\n        bytes32 refCode;\n        uint128 collateral;\n        uint128 size;\n        uint256 price;\n        uint256 tp;\n        bool triggerAbove;\n        bool isFromMarket;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        uint64 orderID;\n        uint64 pairId;\n        uint64 fromId;\n        uint32 updatedAtBlock;\n        uint8 extra0;\n        address account;\n        uint96 extra1;\n        uint256 sl;\n        bool isIncrease;\n        bool isLong;\n        uint16 market;\n        uint96 extra2;\n        uint128 gas;\n        uint8 version;\n    }\n\n    struct Tuple826895 {\n        bool isSuspended;\n        bool allowOpen;\n        bool allowClose;\n        bool validDecrease;\n        uint16 minSlippage;\n        uint16 maxSlippage;\n        uint16 minLeverage;\n        uint16 maxLeverage;\n        uint16 minPayment;\n        uint16 minCollateral;\n        uint16 decreaseNumLimit;\n        uint32 maxTradeAmount;\n    }\n\n    struct Tuple557464 {\n        bool success;\n        bytes returnData;\n    }\n\n    struct Tuple3316247 {\n        uint256 size;\n        uint256 collateral;\n        int256 entryFundingRate;\n        int256 realisedPnl;\n        uint256 averagePrice;\n        bool isLong;\n        uint32 lastTime;\n        uint16 market;\n        uint72 extra0;\n    }\n\n    struct Tuple6022437 {\n        uint256 size;\n        uint256 collateral;\n        int256 entryFundingRate;\n        int256 realisedPnl;\n        uint256 averagePrice;\n        bool isLong;\n        uint32 lastTime;\n        uint16 market;\n        uint72 extra0;\n    }\n\n    struct Tuple09420 {\n        uint256 size;\n        uint256 collateral;\n        int256 entryFundingRate;\n        int256 realisedPnl;\n        uint256 averagePrice;\n        bool isLong;\n        uint32 lastTime;\n        uint16 market;\n        uint72 extra0;\n    }\n\n    struct Tuple6462124 {\n        uint256 size;\n        uint256 collateral;\n        int256 entryFundingRate;\n        int256 realisedPnl;\n        uint256 averagePrice;\n        bool isLong;\n        uint32 lastTime;\n        uint16 market;\n        uint72 extra0;\n    }\n\n    struct Tuple1236461 {\n        address facetAddress;\n        bytes4[] functionSelectors;\n    }\n    \n\n   function authority() external view returns (address ) {}\n\n   function setAuthority(address  newAuthority) external {}\n\n   function implementation() external view returns (address ) {}\n\n   function setDummyImplementation(address  _implementation) external {}\n\n   function _collectFees(bytes memory _data) external {}\n\n   function _updateCumulativeFundingRate(uint16  market, uint256  longSize, uint256  shortSize) external {}\n\n   function addSkipTime(uint16  market, uint256  start, uint256  end) external {}\n\n   function cumulativeFundingRates(uint16  market, bool  isLong) external view returns (int256 ) {}\n\n   function feeWithdraw(uint16  market, address  to, uint256  amount) external {}\n\n   function getExecFee(uint16  market) external view returns (uint256 ) {}\n\n   function getFeeAndRatesOfMarket(uint16  market) external view returns (uint256[] memory fees, int256[] memory fundingRates, int256[] memory _cumulativeFundingRates) {}\n\n   function getFeesReceivable(Tuple21927 memory params, Tuple464693 memory position) external view returns (int256[] memory fees, int256  totalFee) {}\n\n   function getFundingFee(uint16  market, uint256  size, int256  entryFundingRate, bool  isLong) external view returns (int256 ) {}\n\n   function getGlobalOpenInterest(uint16  market) external view returns (uint256  _globalSize) {}\n\n   function getNextFundingRate(address  market, uint256  longSize, uint256  shortSize) external {}\n\n   function getOrderFees(Tuple2426236 memory data) external view returns (int256  fees) {}\n\n   function initFeeFacet(uint16  market) external {}\n\n   function setCalFundingRates(uint16  market, bool  isLong, int256  calFundingRate) external {}\n\n   function setCalIntervals(uint16  market, uint256  interval) external {}\n\n   function setFeeAndRates(uint16  market, uint8  feeType, uint256  feeAndRate) external {}\n\n   function setFeeConfigs(uint16  market, uint8  configType, uint256  value) external {}\n\n   function setFundFeeLoss(uint16  market, uint256  loss) external {}\n\n   function setFundingIntervals(uint16  market, uint256  interval) external {}\n\n   function setFundingRates(uint16  market, bool  isLong, int256  fundingRate, int256  cumulativeFundingRate) external {}\n\n   function setLastCalTimes(uint16  market, uint256  lastCalTime) external {}\n\n   function _addMarket(bytes memory data) external {}\n\n   function addMarket(uint16  market, string memory name, address  _vault, address  token, bool  isSuspended, bool  allowOpen, bool  allowClose, bool  validDecrease, uint16  minSlippage, uint16  maxSlippage, uint16  minLeverage, uint16  maxLeverage, uint16  minPayment, uint16  minCollateral, uint16  decreaseNumLimit, uint32  maxTradeAmount) external {}\n\n   function availableLiquidity(address  market, address  account, bool  isLong) external view returns (uint256 ) {}\n\n   function containsMarket(uint16  marketId) external view returns (bool ) {}\n\n   function getExecutableOrdersByPrice(Tuple2589231 memory cache) external view returns (Tuple564566[] memory _orders) {}\n\n   function getGlobalPnl(address  _vault) external view returns (int256 ) {}\n\n   function getMarket(uint16  market) external view returns (bytes memory result) {}\n\n   function getMarkets() external view returns (bytes memory result) {}\n\n   function getUSDDecimals() external pure returns (uint8 ) {}\n\n   function markeConfig(uint16  market) external view returns (Tuple826895 memory _config) {}\n\n   function removeMarket(uint16  marketId) external {}\n\n   function setMarketConf(uint16  market, Tuple9273272 memory data) external {}\n\n   function aggregateCall(bytes[] memory calls) external returns (uint256  blockNumber, bytes[] memory returnData) {}\n\n   function aggregateStaticCall(bytes[] memory calls) external view returns (uint256  blockNumber, bytes[] memory returnData) {}\n\n   function blockAndAggregate(bytes[] memory calls) external returns (uint256  blockNumber, bytes32  blockHash, Tuple557464[] memory returnData) {}\n\n   function getBlockHash(uint256  blockNumber) external view returns (bytes32  blockHash) {}\n\n   function getBlockNumber() external view returns (uint256  blockNumber) {}\n\n   function getCurrentBlockCoinbase() external view returns (address  coinbase) {}\n\n   function getCurrentBlockGasLimit() external view returns (uint256  gaslimit) {}\n\n   function getCurrentBlockTimestamp() external view returns (uint256  timestamp) {}\n\n   function getEthBalance(address  addr) external view returns (uint256  balance) {}\n\n   function getLastBlockHash() external view returns (bytes32  blockHash) {}\n\n   function tryAggregate(bool  requireSuccess, bytes[] memory calls) external returns (Tuple557464[] memory returnData) {}\n\n   function tryBlockAndAggregate(bool  requireSuccess, bytes[] memory calls) external returns (uint256  blockNumber, bytes32  blockHash, Tuple557464[] memory returnData) {}\n\n   function getChainPrice(uint16  market, bool  _maximise) external view returns (uint256 ) {}\n\n   function getFastPrice(uint16  market, uint256  _referencePrice, bool  _maximise) external view returns (uint256 ) {}\n\n   function getPrice(uint16  market, bool  _maximise) external view returns (uint256 ) {}\n\n   function initDefaultOracleConfig() external {}\n\n   function priceFeed(uint16  market) external view returns (address ) {}\n\n   function setMaxCumulativeDeltaDiffs(uint16[] memory _market, uint256[] memory _maxCumulativeDeltaDiffs) external {}\n\n   function setOracleConfig(Tuple803863 memory _config) external {}\n\n   function setPrices(uint16[] memory _markets, uint256[] memory _prices) external {}\n\n   function setUSDT(address  _feed) external {}\n\n   function usdtFeed() external view returns (address ) {}\n\n   function _addOrders(Tuple8179501[] memory _inputs) external returns (Tuple564566[] memory _orders) {}\n\n   function cancelOrder(address  account, uint16  market, bool  isIncrease, uint256  orderID, bool  isLong) external returns (Tuple564566[] memory _orders) {}\n\n   function updateOrder(Tuple910965 memory _inputs) external payable {}\n\n   function execAddOrder(Tuple680644 memory order, Tuple5849784 memory _params) external {}\n\n   function getAccountSizeOfMarkets(uint16  market, address  account) external view returns (uint256  sizesL, uint256  sizesS) {}\n\n   function getGlobalSize(uint16  market) external view returns (uint256  sizesLong, uint256  sizesShort) {}\n\n   function getMarketsOfMarket(uint16  market) external view returns (uint256[] memory) {}\n\n   function _decreasePosition(Tuple8634448 memory inputs) external returns (Tuple3316247 memory result) {}\n\n   function _increasePosition(Tuple8047955 memory _data) external returns (Tuple3316247 memory result) {}\n\n   function _liquidatePosition(uint16  market, address  account, uint256  oraclePrice, bool  isLong) external returns (Tuple3316247 memory result) {}\n\n   function containsPositionOfUser(uint16  market, address  account) external view returns (bool ) {}\n\n   function getAccountSize(uint16  market, address  account) external view returns (uint256 , uint256 ) {}\n\n   function getGlobalPosition(uint16  market, bool  isLong) external view returns (Tuple6022437 memory) {}\n\n   function getMarketSizes(uint16  market) external view returns (uint256 , uint256 ) {}\n\n   function getPNLOfMarket(uint16  market) external view returns (int256  pnl) {}\n\n   function getPNLOfUser(uint16  market, address  account, uint256  sizeDelta, uint256  markPrice, bool  isLong) external view returns (int256 ) {}\n\n   function getPosition(uint16  market, address  account, uint256  markPrice, bool  isLong) external view returns (Tuple6022437 memory) {}\n\n   function getPositionCount(uint16  market, bool  isLong) external view returns (uint256 ) {}\n\n   function getPositionKeys(uint16  market, uint256  start, uint256  end, bool  isLong) external view returns (address[] memory) {}\n\n   function getPositions(uint16  market, address  account) external view returns (Tuple09420 memory posLong, Tuple6462124 memory posShort) {}\n\n   function isLiquidate(address  _account, uint16  _market, bool  _isLong, uint256  _price) external view returns (uint8  _state) {}\n\n   function execSubOrder(Tuple680644 memory order, Tuple5849784 memory _params) external {}\n\n   function liquidate(uint16  market, address  accounts, bool  _isLong) external {}\n\n   function _updatePositionCallback(Tuple4013238 memory _event) external {}\n\n   function getCodeOwners(bytes32  _code) external view returns (address ) {}\n\n   function govSetCodeOwner(bytes32  _code, address  _newAccount) external {}\n\n   function registerCode(bytes32  _code) external {}\n\n   function setCodeOwner(bytes32  _code, address  _newAccount) external {}\n\n   function setReferrerDiscountShare(address  _account, uint256  _discountShare) external {}\n\n   function setReferrerTier(address  _referrer, uint256  _tierId) external {}\n\n   function setTier(uint256  _tierId, uint256  _totalRebate, uint256  _discountShare) external {}\n\n   function setTraderReferralCodeByGov(address  _account, bytes32  _code) external {}\n\n   function setTraderReferralCodeByUser(bytes32  _code) external {}\n\n   function diamondCut(Tuple6871229[] memory _diamondCut, address  _init, bytes memory _calldata) external {}\n\n   function owner() external view returns (address  owner_) {}\n\n   function transferOwnership(address  _newOwner) external {}\n\n   function facetAddress(bytes4  _functionSelector) external view returns (address  facetAddress_) {}\n\n   function facetAddresses() external view returns (address[] memory facetAddresses_) {}\n\n   function facetFunctionSelectors(address  _facet) external view returns (bytes4[] memory facetFunctionSelectors_) {}\n\n   function facets() external view returns (Tuple1236461[] memory facets_) {}\n\n   function supportsInterface(bytes4  _interfaceId) external view returns (bool ) {}\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 1
    },
    "viaIR": true,
    "evmVersion": "paris",
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}