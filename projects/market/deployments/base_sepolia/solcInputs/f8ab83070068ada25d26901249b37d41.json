{
  "language": "Solidity",
  "sources": {
    "src/dummy/DummyDiamondImplementation.sol": {
      "content": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n\n\ncontract DummyDiamondImplementation {\n\n\n    struct Tuple9273272 {\n        bool isSuspended;\n        bool allowOpen;\n        bool allowClose;\n        bool validDecrease;\n        uint16 minSlippage;\n        uint16 maxSlippage;\n        uint16 minLeverage;\n        uint16 maxLeverage;\n        uint16 minPayment;\n        uint16 minCollateral;\n        uint16 decreaseNumLimit;\n        uint32 maxTradeAmount;\n    }\n\n    struct Tuple9848150 {\n        uint256 oraclePrice;\n        uint256 pay;\n        uint256 slippage;\n        uint16 market;\n        bool isLong;\n        bool isOpen;\n        bool isCreate;\n        bool isFromMarket;\n        uint256 sizeDelta;\n        uint256 price;\n        uint256 collateralDelta;\n        uint256 collateral;\n        uint256 tp;\n        uint256 sl;\n        uint64 orderId;\n        address account;\n        bool isExec;\n        uint8 liqState;\n        uint64 fromOrder;\n        bytes32 refCode;\n        uint8 execNum;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        bool triggerAbove;\n        uint128 gas;\n    }\n\n    struct Tuple8473922 {\n        bytes32 refCode;\n        uint128 collateral;\n        uint128 size;\n        uint256 price;\n        uint256 tp;\n        bool triggerAbove;\n        bool isFromMarket;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        uint64 orderID;\n        uint64 pairId;\n        uint64 fromId;\n        uint32 updatedAtBlock;\n        uint8 extra0;\n        address account;\n        uint96 extra1;\n        uint256 sl;\n        bool isIncrease;\n        bool isLong;\n        uint16 market;\n        uint96 extra2;\n        uint128 gas;\n        uint8 version;\n    }\n\n    struct Tuple2000403 {\n        uint256 oraclePrice;\n        uint256 pay;\n        uint256 slippage;\n        uint16 market;\n        bool isLong;\n        bool isOpen;\n        bool isCreate;\n        bool isFromMarket;\n        uint256 sizeDelta;\n        uint256 price;\n        uint256 collateralDelta;\n        uint256 collateral;\n        uint256 tp;\n        uint256 sl;\n        uint64 orderId;\n        address account;\n        bool isExec;\n        uint8 liqState;\n        uint64 fromOrder;\n        bytes32 refCode;\n        uint8 execNum;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        bool triggerAbove;\n        uint128 gas;\n    }\n\n    struct Tuple680644 {\n        bytes32 refCode;\n        uint128 collateral;\n        uint128 size;\n        uint256 price;\n        uint256 tp;\n        bool triggerAbove;\n        bool isFromMarket;\n        bool isKeepLev;\n        bool isKeepLevTP;\n        bool isKeepLevSL;\n        uint64 orderID;\n        uint64 pairId;\n        uint64 fromId;\n        uint32 updatedAtBlock;\n        uint8 extra0;\n        address account;\n        uint96 extra1;\n        uint256 sl;\n        bool isIncrease;\n        bool isLong;\n        uint16 market;\n        uint96 extra2;\n        uint128 gas;\n        uint8 version;\n    }\n\n    struct Tuple6871229 {\n        address facetAddress;\n        uint8 action;\n        bytes4[] functionSelectors;\n    }\n\n    struct Tuple826895 {\n        bool isSuspended;\n        bool allowOpen;\n        bool allowClose;\n        bool validDecrease;\n        uint16 minSlippage;\n        uint16 maxSlippage;\n        uint16 minLeverage;\n        uint16 maxLeverage;\n        uint16 minPayment;\n        uint16 minCollateral;\n        uint16 decreaseNumLimit;\n        uint32 maxTradeAmount;\n    }\n\n    struct Tuple1236461 {\n        address facetAddress;\n        bytes4[] functionSelectors;\n    }\n    \n\n   function addMarket(bytes memory data) external {}\n\n   function availableLiquidity(address  market, address  account, bool  isLong) external view returns (uint256 ) {}\n\n   function containsMarket(uint16  marketId) external view returns (bool ) {}\n\n   function formatCollateral(uint256  amount, uint8  collateralTokenDigits) external pure returns (uint256 ) {}\n\n   function getGlobalPnl(address  vault) external view returns (int256 ) {}\n\n   function getMarket(uint16  market) external view returns (bytes memory result) {}\n\n   function getMarkets() external view returns (bytes memory result) {}\n\n   function getUSDDecimals() external pure returns (uint8 ) {}\n\n   function isLiquidate(uint16  market, address  account, bool  isLong) external view {}\n\n   function markeConfig(uint16  market) external view returns (Tuple826895 memory _config) {}\n\n   function parseVaultAsset(uint256  amount, uint8  originDigits) external pure returns (uint256 ) {}\n\n   function parseVaultAssetSigned(int256  amount, uint8  collateralTokenDigits) external pure returns (int256 ) {}\n\n   function removeMarket(uint16  marketId) external {}\n\n   function setConf(uint16  market, Tuple9273272 memory data) external {}\n\n   function transferIn(address  tokenAddress, address  _from, address  _to, uint256  _tokenAmount) external {}\n\n   function transferOut(address  tokenAddress, address  _to, uint256  _tokenAmount) external {}\n\n   function usdDecimals() external view returns (uint8 ) {}\n\n   function authority() external view returns (address ) {}\n\n   function setAuthority(address  newAuthority) external {}\n\n   function implementation() external view returns (address ) {}\n\n   function setDummyImplementation(address  _implementation) external {}\n\n   function _increasePositionWithOrders(Tuple9848150 memory _inputs) external {}\n\n   function execAddOrderKey(Tuple8473922 memory exeOrder, Tuple2000403 memory _params) external {}\n\n   function getAccountSizeOfMarkets(uint16  market, address  account) external view returns (uint256  sizesL, uint256  sizesS) {}\n\n   function getGlobalSize(uint16  market) external view returns (uint256  sizesLong, uint256  sizesShort) {}\n\n   function execSubOrderKey(Tuple680644 memory order, Tuple2000403 memory _params) external {}\n\n   function liquidate(uint16  market, address  accounts, bool  _isLong) external {}\n\n   function diamondCut(Tuple6871229[] memory _diamondCut, address  _init, bytes memory _calldata) external {}\n\n   function owner() external view returns (address  owner_) {}\n\n   function transferOwnership(address  _newOwner) external {}\n\n   function facetAddress(bytes4  _functionSelector) external view returns (address  facetAddress_) {}\n\n   function facetAddresses() external view returns (address[] memory facetAddresses_) {}\n\n   function facetFunctionSelectors(address  _facet) external view returns (bytes4[] memory facetFunctionSelectors_) {}\n\n   function facets() external view returns (Tuple1236461[] memory facets_) {}\n\n   function supportsInterface(bytes4  _interfaceId) external view returns (bool ) {}\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 1
    },
    "evmVersion": "paris",
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}