name: Deploy # 工作流名称

on:
  push:
    tags:
      - 'pre-release/*/*/*'

jobs:
  market-test:
    environment: base-sepolia
    runs-on: ubuntu-latest
    env:
      ETHERSCAN_API_KEY_BASE: ${{ secrets.ENVKEY_ETHERSCAN_API_KEY_BASE }}
      ETH_NODE_URI_BASE_SEPOLIA: ${{ secrets.ENVKEY_ETH_NODE_URI_BASE_SEPOLIA }}
      MNEMONIC: ${{ secrets.MNEMONIC }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Extract Network and Project Name
        id: extract
        run: |
          TAG_REF=${GITHUB_REF/refs\/tags\/pre-release\//}
          IFS='/' read -ra ADDR <<< "$TAG_REF"
          echo "Network Name: ${ADDR[0]}"
          echo "Project Name: ${ADDR[1]}"
          echo "Version: ${ADDR[2]}"
          echo "::set-output name=network_name::${ADDR[0]}"
          echo "::set-output name=project_name::${ADDR[1]}"
          echo "::set-output name=version::${ADDR[2]}"

      - name: Use Variables
        run: |
          echo "Network Name: ${{ steps.extract.outputs.network_name }}"
          echo "Project Name: ${{ steps.extract.outputs.project_name }}"
          echo "Project Name: ${{ steps.extract.outputs.version }}"

      # 设置 Node.js 环境
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x # 使用 Node.js 版本 20.x
      - run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ID_RSA }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          
      - run: git config --global user.email "zhuoqian.zhou@dalveytech.com"
      - run: git config --global user.name "CD Bot"
      - run: git remote set-url --push origin git@github.com:dalveytech-zhuoqian/contracts-v2-fork.git
      # - run: touch 11.md && git add 11.md && git commit -m "test" && git push

      # 安装依赖
      - name: Install submodule
        run: git submodule update --init --recursive

      - name: Install dependencies
        run: cd projects/${{ steps.extract.outputs.project_name }} && yarn install --frozen-lockfile && cd ../.. # 安装依赖，确保锁定文件一致

      - name: typechain
        run: cd projects/${{ steps.extract.outputs.project_name }} && yarn prepare && cd ../.. 

      - name: Compile
        run: cd projects/${{ steps.extract.outputs.project_name }} && yarn compile && cd ../.. 
      
      - name: test
        run: cd projects/${{ steps.extract.outputs.project_name }} && yarn test && cd ../.. 

      - name: deploy, commit, push tag
        run: cd projects/${{ steps.extract.outputs.project_name }} && yarn deploy ${{ steps.extract.outputs.network_name }} && git add deployments/${{ steps.extract.outputs.network_name }} && git commit -m "Deploy contracts" && git push && git tag release/${{ steps.extract.outputs.network_name }}/${{ steps.extract.outputs.project_name }}/${{ steps.extract.outputs.version }} && git push origin --tags


