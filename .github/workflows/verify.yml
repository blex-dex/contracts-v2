name: Tests # 工作流名称

on:
  push:
    branches:
      - dev # 当 main 分支有代码推送时触发工作流
  pull_request: # 当有 pull request 时触发工作流

jobs:
  create-envfile:
    runs-on: ubuntu-latest
    env:
      ETHERSCAN_API_KEY_BASE: ${{ secrets.ENVKEY_ETHERSCAN_API_KEY_BASE }}
      ENVKEY_ETH_NODE_URI_BASE_SEPOLIA: ${{ secrets.ENVKEY_ETH_NODE_URI_BASE_SEPOLIA }}
      
    steps:
      # 缓存 Yarn 依赖
      - id: yarn-cache
        run: cd projects/market && echo "::set-output name=dir::$(yarn cache dir)" # 设置输出变量以缓存 Yarn 依赖目录

      # - uses: actions/cache@v3
      #   with:
      #     path: ${{ steps.yarn-cache.outputs.dir }} # 缓存 Yarn 依赖目录
      #     key: yarn-${{ hashFiles('projects/market/package-lock.lock') }} # 缓存键值，根据 yarn.lock 文件生成
      #     restore-keys: |
      #       yarn-  # 恢复缓存的键值

      # # 安装依赖
      # - name: Install submodule
      #   run: git submodule update --init --recursive

      # - name: Install dependencies
      #   run: cd projects/market && yarn install --frozen-lockfile && cd ../.. # 安装依赖，确保锁定文件一致

      # # 编译代码
      # - name: Compile
      #   run: cd projects/market && yarn compile && cd ../.. # 编译代码

      # # verify代码
      # - name: Verify
      #   run: cd projects/market && yarn verify base_sepolia && cd ../.. # 编译代码